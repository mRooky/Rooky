/*
 * RenderTypes.h
 *
 *  Created on: Jan 28, 2019
 *      Author: rookyma
 */

#ifndef SOURCE_CORE_RENDER_RENDERENUM_H_
#define SOURCE_CORE_RENDER_RENDERENUM_H_

#include <cstdint>

namespace Render
{
	enum class ImageType : uint32_t
	{
		IMAGE_TYPE_1D,
		IMAGE_TYPE_2D,
		IMAGE_TYPE_3D,
		IMAGE_TYPE_CUBE,
		IMAGE_TYPE_1D_ARRAY,
		IMAGE_TYPE_2D_ARRAY,
		IMAGE_TYPE_CUBE_ARRAY,
		IMAGE_TYPE_UNKNOWN = ~0u
	};

	enum class ShaderType : uint32_t
	{
		SHADER_TYPE_VERTEX,
		SHADER_TYPE_HULL,
		SHADER_TYPE_DOMAIN,
		SHADER_TYPE_GEOMETRY,
		SHADER_TYPE_FRAGMENT,
		SHADER_TYPE_COMPUTE,
		SHADER_TYPE_UNKNOWN = ~0U
	};

	enum class IndexType : uint32_t
	{
		INDEX_TYPE_U16,
		INDEX_TYPE_U32,
		INDEX_TYPE_UNKNOWN = ~0u
	};

	enum class BufferUsageFlags : uint32_t
	{
		BUFFER_USAGE_COMMON = 0 << 0,
		BUFFER_USAGE_INDEX = 1 << 0,
		BUFFER_USAGE_VERTEX = 1 << 1,
		BUFFER_USAGE_UNIFORM = 1 << 2,
		BUFFER_USAGE_STORAGE = 1 << 3,
		BUFFER_USAGE_INDIRECT = 1 << 4,
		BUFFER_USAGE_UNIFORM_TEXEL = 1 << 5,
		BUFFER_USAGE_STORAGE_TEXEL = 1 << 6,
		BUFFER_USAGE_UNKNOWN = ~0u
	};

	enum class ImageUsageFlags : uint32_t
	{
		IMAGE_USAGE_COMMON = 0 << 0,
	    IMAGE_USAGE_SAMPLED = 1 << 0,
	    IMAGE_USAGE_STORAGE = 1 << 1,
	    IMAGE_USAGE_COLOR_ATTACHMENT = 1 << 2,
	    IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT = 1 << 3,
	    IMAGE_USAGE_TRANSIENT_ATTACHMENT = 1 << 4,
	    IMAGE_USAGE_INPUT_ATTACHMENT = 1 << 5,
	    IMAGE_USAGE_UNKNOWN = ~0u
	};

	enum class HeapAccess : uint32_t
	{
		HEAP_ACCESS_GPU_ONLY,
		HEAP_ACCESS_CPU_VISIBLE,
		HEAP_ACCESS_UNKNOWN
	};

	enum class BlendFactor : uint32_t
	{
		BLEND_FACTOR_ZERO,
		BLEND_FACTOR_ONE,
		BLEND_FACTOR_SRC_COLOR,
		BLEND_FACTOR_ONE_MINUS_SRC_COLOR,
		BLEND_FACTOR_DST_COLOR,
		BLEND_FACTOR_ONE_MINUS_DST_COLOR,
		BLEND_FACTOR_SRC_ALPHA,
		BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
		BLEND_FACTOR_DST_ALPHA,
		BLEND_FACTOR_ONE_MINUS_DST_ALPHA,
		BLEND_FACTOR_CONSTANT_ALPHA,
		BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,
		BLEND_FACTOR_SRC_ALPHA_SATURATE
	};

	enum class BlendOperation
	{
	    BLEND_OPERATION_ADD = 0,
	    BLEND_OPERATION_SUBTRACT = 1,
	    BLEND_OPERATION_REVERSE_SUBTRACT = 2,
	    BLEND_OPERATION_MIN = 3,
	    BLEND_OPERATION_MAX = 4,
	};

	enum class DepthFunction : uint32_t
	{
		DEPTH_FUNCTION_NEVER,
		DEPTH_FUNCTION_LESS,
		DEPTH_FUNCTION_EQUAL,
		DEPTH_FUNCTION_LEQUAL,
		DEPTH_FUNCTION_GREATER,
		DEPTH_FUNCTION_NOTEQUAL,
		DEPTH_FUNCTION_GEQUAL,
		DEPTH_FUNCTION_ALWAYS
	};

	enum class CullFaceSide : uint32_t
	{
		CULL_FACE_SIDE_NONE,
		CULL_FACE_SIDE_BACK,
		CULL_FACE_SIDE_FRONT,
		CULL_FACE_SIDE_FRONT_AND_BACK
	};

	enum class FrontFace : uint32_t
	{
		FRONT_FACE_CW,
		FRONT_FACE_CCW
	};

	enum class StencilFunction : uint32_t
	{
		STENCIL_FUNCTION_NEVER,
		STENCIL_FUNCTION_ALWAYS,
		STENCIL_FUNCTION_LESS,
		STENCIL_FUNCTION_LEQUAL,
		STENCIL_FUNCTION_EQUAL,
		STENCIL_FUNCTION_GREATER,
		STENCIL_FUNCTION_GEQUAL,
		STENCIL_FUNCTION_NOTEQUAL
	};

	enum class StencilOperation : uint32_t
	{
		STENCIL_OPERATION_KEEP,
		STENCIL_OPERATION_ZERO,
		STENCIL_OPERATION_REPLACE,
		STENCIL_OPERATION_INCR,
		STENCIL_OPERATION_DECR,
		STENCIL_OPERATION_INVERT,
		STENCIL_OPERATION_INCR_WRAP,
		STENCIL_OPERATION_DECR_WRAP
	};

	enum class VertexInputRate : uint32_t
	{
	    VERTEX_INPUT_RATE_VERTEX = 0,
	    VERTEX_INPUT_RATE_INSTANCE = 1,
		VERTEX_INPUT_RATE_UNKNOWN = ~0U
	};

	enum class PrimitiveTopology : uint32_t
	{
		PRIMITIVE_TOPOLOGY_POINT_LIST = 0,
		PRIMITIVE_TOPOLOGY_LINE_LIST = 1,
		PRIMITIVE_TOPOLOGY_LINE_STRIP = 2,
		PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = 3,
		PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = 4,
		PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = 5,
		PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = 6,
		PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = 7,
		PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = 8,
		PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = 9,
		PRIMITIVE_TOPOLOGY_PATCH_LIST = 10
	};

	enum class PolygonMode : uint32_t
	{
		POLYGON_MODE_FILL,
		POLYGON_MODE_LINE,
		POLYGON_MODE_POINT,
		POLYGON_MODE_UNKNOWN = ~0U
	};

	enum ShaderStage : uint32_t
	{
		SHADER_STAGE_VERTEX,
		SHADER_STAGE_HULL,
		SHADER_STAGE_DOMAIN,
		SHADER_STAGE_GEOMETRY,
		SHADER_STAGE_FRAGMENT,
		SHADER_STAGE_COMPUTE,
		SHADER_STAGE_ALL_GRAPHICS,
		SHADER_STAGE_UNKNOWN = ~0u
	};

	enum class CompareOperation : uint32_t
	{
	    COMPARE_OP_NEVER = 0,
	    COMPARE_OP_LESS = 1,
	    COMPARE_OP_EQUAL = 2,
	    COMPARE_OP_LESS_OR_EQUAL = 3,
	    COMPARE_OP_GREATER = 4,
	    COMPARE_OP_NOT_EQUAL = 5,
	    COMPARE_OP_GREATER_OR_EQUAL = 6,
	    COMPARE_OP_ALWAYS = 7
	};

}

#endif /* SOURCE_CORE_RENDER_RENDERENUM_H_ */
