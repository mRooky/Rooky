/*
 * Object.cpp
 *
 *  Created on: Aug 14, 2018
 *      Author: rookyma
 */

#include "VulkanObject.h"
#include <cassert>

namespace Vulkan
{

Object::Object(void) = default;
Object::~Object(void) = default;

const char* Object::GetResultName(VkResult result)
{
#define VK_RESULT_CASE(x) case x: return #x
	switch (result)
	{
	VK_RESULT_CASE(VK_SUCCESS);
	VK_RESULT_CASE(VK_NOT_READY);
	VK_RESULT_CASE(VK_TIMEOUT);
	VK_RESULT_CASE(VK_EVENT_SET);
	VK_RESULT_CASE(VK_EVENT_RESET);
	VK_RESULT_CASE(VK_INCOMPLETE);
	VK_RESULT_CASE(VK_ERROR_OUT_OF_HOST_MEMORY);
	VK_RESULT_CASE(VK_ERROR_OUT_OF_DEVICE_MEMORY);
	VK_RESULT_CASE(VK_ERROR_INITIALIZATION_FAILED);
	VK_RESULT_CASE(VK_ERROR_DEVICE_LOST);
	VK_RESULT_CASE(VK_ERROR_MEMORY_MAP_FAILED);
	VK_RESULT_CASE(VK_ERROR_LAYER_NOT_PRESENT);
	VK_RESULT_CASE(VK_ERROR_EXTENSION_NOT_PRESENT);
	VK_RESULT_CASE(VK_ERROR_FEATURE_NOT_PRESENT);
	VK_RESULT_CASE(VK_ERROR_INCOMPATIBLE_DRIVER);
	VK_RESULT_CASE(VK_ERROR_TOO_MANY_OBJECTS);
	VK_RESULT_CASE(VK_ERROR_FORMAT_NOT_SUPPORTED);
	VK_RESULT_CASE(VK_ERROR_FRAGMENTED_POOL);
	VK_RESULT_CASE(VK_ERROR_OUT_OF_POOL_MEMORY);
	VK_RESULT_CASE(VK_ERROR_INVALID_EXTERNAL_HANDLE);
	VK_RESULT_CASE(VK_ERROR_SURFACE_LOST_KHR);
	VK_RESULT_CASE(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR);
	VK_RESULT_CASE(VK_SUBOPTIMAL_KHR);
	VK_RESULT_CASE(VK_ERROR_OUT_OF_DATE_KHR);
	VK_RESULT_CASE(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR);
	VK_RESULT_CASE(VK_ERROR_VALIDATION_FAILED_EXT);
	VK_RESULT_CASE(VK_ERROR_INVALID_SHADER_NV);
	VK_RESULT_CASE(VK_ERROR_FRAGMENTATION_EXT);
	VK_RESULT_CASE(VK_ERROR_NOT_PERMITTED_EXT);
	default:
		assert(false);
		return "UNKNOWN";
	}
}

} /* namespace Vulkan */
